#define DEFAULT 0
#define NUM     1
#define NAV     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6
#define ARRC    7

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS BACKSPACE>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        tidegrave: tidegrave {
            compatible = "zmk,behavior-mod-morph";
            label = "TIDEGRAVE";
            bindings = <&kp LS(GRAVE)>, <&kp GRAVE>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

        tidesc: tidesc {
            compatible = "zmk,behavior-mod-morph";
            label = "TIDESC";
            bindings = <&kp ESCAPE>, <&tidegrave>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        braceket: braceket {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACEKET";
            bindings = <&autobracket>, <&autobracket>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        shiftcaps {
            bindings = <&caps_word>;
            key-positions = <24 35>;
        };

        mb1 {
            bindings = <&mkp MB1>;
            key-positions = <19 20>;
        };

        mb2 {
            bindings = <&mkp MB2>;
            key-positions = <20 21>;
        };

        scrollkey {
            bindings = <&mo 5>;
            key-positions = <19 21>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <11 10>;
        };

        bkslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <22 23>;
        };

        esctide {
            bindings = <&tidesc>;
            key-positions = <0 1>;
        };

        snipelayer {
            bindings = <&mo 6>;
            key-positions = <14 16>;
        };

        hjklmo {
            bindings = <&mo 7>;
            key-positions = <15 16>;
        };
    };

    macros {
        autobracket: autobracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;

            label = "AUTOBRACKET";
        };

        autobrace: autobrace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;

            label = "AUTOBRACE";
        };

        autosqt: autosqo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp SQT &kp SQT &kp LEFT>;

            label = "AUTOSQO";
        };

        autodqt: autodqt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp DOUBLE_QUOTES &kp DOUBLE_QUOTES &kp LEFT>;

            label = "AUTODQT";
        };

        autolessgreat: autolessgreat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LESS_THAN &kp GREATER_THAN &kp LEFT_ARROW>;

            label = "AUTOLESSGREAT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp ESCAPE      &kp Q         &kp W         &kp E      &kp R  &kp T             &kp Y      &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp LCTRL       &kp A         &kp S         &kp D      &kp F  &kp G             &kp H      &kp J  &kp K      &kp L    &kp SEMI   &kp ENTER
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C      &kp V  &kp B             &kp N      &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
&kp LEFT_ALT    &kp LEFT_ALT  &kp LEFT_GUI  &kp SPACE  &mo 2             &mo 1  &kp SPACE                                        &mo 3
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&trans  &trans  &trans    &kp UP_ARROW  &trans     &kp HOME              &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0      &kp MINUS          &kp EQUAL
&trans  &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp END               &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE
&trans  &trans  &trans    &trans        &trans     &trans                &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans            &trans             &trans
&trans  &trans  &trans    &trans        &trans                   &trans  &trans                                                                         &trans
            >;
        };

        symbol_layer {
            label = "NAV";
            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2            &kp NUMBER_3       &kp NUMBER_4       &kp NUMBER_5                    &trans  &trans  &autobracket    &trans     &trans  &trans
&trans  &trans        &kp LA(LC(LEFT_ARROW))  &kp LA(LC(ENTER))  &kp LA(LC(RIGHT))  &kp LC(UP_ARROW)                &trans  &trans  &trans          &braceket  &trans  &trans
&trans  &trans        &trans                  &trans             &trans             &kp LC(DOWN_ARROW)              &trans  &trans  &autolessgreat  &trans     &trans  &trans
&trans  &trans        &trans                  &trans             &trans                                     &trans  &trans                                             &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &none              &none       &none         &none         &none         &none  &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none              &none       &none         &none         &none         &none  &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none              &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none  &none
&trans  &trans  &trans   &trans   &trans              &trans  &trans                                                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        layer_7 {
            label = "ARRC";
            bindings = <
&trans  &trans  &trans        &trans                  &trans             &trans                            &trans            &trans    &trans  &trans     &trans  &trans
&trans  &trans  &trans        &trans                  &trans             &trans                            &kp LEFT          &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans        &trans                  &trans             &trans                            &trans            &trans    &trans  &trans     &trans  &trans
&trans  &trans  &kp LC(PLUS)  &kp LG(LA(LEFT_ARROW))  &kp LG(LA(RIGHT))              &kp LG(LA(UP_ARROW))  &kp LG(LA(DOWN))                                       &trans
            >;
        };
    };
};
